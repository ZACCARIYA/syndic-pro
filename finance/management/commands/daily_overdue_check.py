from django.core.management.base import BaseCommand
from django.core.management import call_command
from django.utils import timezone
import logging

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = 'V√©rification quotidienne automatique des impay√©s (√† ex√©cuter via cron)'

    def handle(self, *args, **options):
        """
        Commande √† ex√©cuter quotidiennement via cron pour d√©tecter automatiquement les impay√©s
        
        Pour configurer sur le serveur, ajoutez √† votre crontab :
        0 9 * * * cd /path/to/project && python manage.py daily_overdue_check
        
        Cela ex√©cutera la v√©rification tous les jours √† 9h du matin
        """
        
        self.stdout.write(
            self.style.SUCCESS(f'üïò V√âRIFICATION QUOTIDIENNE DES IMPAY√âS - {timezone.now().strftime("%Y-%m-%d %H:%M")}')
        )
        
        try:
            # Ex√©cuter la d√©tection des impay√©s
            call_command('detect_overdue_payments')
            
            self.stdout.write(
                self.style.SUCCESS('‚úÖ V√©rification quotidienne termin√©e avec succ√®s')
            )
            
            # Log pour suivi
            logger.info(f"V√©rification quotidienne des impay√©s ex√©cut√©e avec succ√®s - {timezone.now()}")
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå Erreur lors de la v√©rification quotidienne: {e}')
            )
            logger.error(f"Erreur v√©rification quotidienne des impay√©s: {e}")
            raise
